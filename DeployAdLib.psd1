#
# Module manifest for module 'myManifest'
#
# Generated by: User01
#
# Generated on: 1/24/2012
#

@{

# Script module or binary module file associated with this manifest
# RootModule = ''
ModuleToProcess = 'DeployAdLib.psm1'

# Version number of this module.
ModuleVersion = '1.0'

# ID used to uniquely identify this module
GUID = '6a6e071d-dc48-42bd-a65b-9473ba5f9143'

# Author of this module
Author = 'Ben van Zanten'

# Company or vendor of this module
CompanyName = 'Rabobank International'

# Copyright statement for this module
Copyright = '(c) 2015-2016 Rabobank International. All rights reserved.'

# Description of the functionality provided by this module
 Description = 'a library of reusable functions for deploying Domain and Domain Controllers.'

# Minimum version of the Windows PowerShell engine required by this module
PowerShellVersion = '3.0'

# Name of the Windows PowerShell host required by this module
# PowerShellHostName = ''

# Minimum version of the Windows PowerShell host required by this module
# PowerShellHostVersion = ''

# Minimum version of the .NET Framework required by this module
# DotNetFrameworkVersion = ''

# Minimum version of the common language runtime (CLR) required by this module
# CLRVersion = ''

# Processor architecture (None, X86, Amd64) required by this module
# ProcessorArchitecture = ''

# Modules that must be imported into the global environment prior to importing this module
# RequiredModules = @()

# Assemblies that must be loaded prior to importing this module
# RequiredAssemblies = @()

# Script files (.ps1) that are run in the caller's environment prior to importing this module
# ScriptsToProcess = @()

# Type files (.ps1xml) to be loaded when importing this module
# TypesToProcess = @()

# Format files (.ps1xml) to be loaded when importing this module
# FormatsToProcess = @()

# Modules to import as nested modules of the module specified in RootModule/ModuleToProcess
# NestedModules = @()

# Functions to export from this module
FunctionsToExport = '*'

# Cmdlets to export from this module
CmdletsToExport = '*'

# Variables to export from this module
VariablesToExport = '*'

# Aliases to export from this module
AliasesToExport = '*'

# List of all modules packaged with this module
# ModuleList = @()

# List of all files packaged with this module
# FileList = @()

# Private data to pass to the module specified in RootModule/ModuleToProcess
# PrivateData = ''

# HelpInfo URI of this module
# HelpInfoURI = ''

# Default prefix for commands exported from this module. Override the default prefix using Import-Module -Prefix.
# DefaultCommandPrefix = ''

}


# SIG # Begin signature block
# MIINCgYJKoZIhvcNAQcCoIIM+zCCDPcCAQExCzAJBgUrDgMCGgUAMGkGCisGAQQB
# gjcCAQSgWzBZMDQGCisGAQQBgjcCAR4wJgIDAQAABBAfzDtgWUsITrck0sYpfvNR
# AgEAAgEAAgEAAgEAAgEAMCEwCQYFKw4DAhoFAAQUIEkNzfl7MfMcgLuvSzumXReK
# AMCgggp2MIIFEjCCA/qgAwIBAgITVwAD8K8q0U/LIB3mcAABAAPwrzANBgkqhkiG
# 9w0BAQsFADBGMR8wHQYDVQQKExZSYWJvYmFuayBJbnRlcm5hdGlvbmFsMSMwIQYD
# VQQDExpSSSBJbnRyYW5ldCBJc3N1aW5nIENBMiAwMTAeFw0xOTA2MjAwOTQ4MzFa
# Fw0yMTA2MTkwOTQ4MzFaMIGTMQswCQYDVQQGEwJOTDEQMA4GA1UECBMHVXRyZWNo
# dDEQMA4GA1UEBxMHVXRyZWNodDERMA8GA1UEChMIUmFib2JhbmsxLTArBgNVBAsT
# JENPTyBJbmZyYXN0cnVjdHVyZSBCV0EgQ29yZSBJZGVudGl0eTEeMBwGA1UEAxMV
# WmFudGVuIHZhbiwgQkFNIChCZW4pMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
# CgKCAQEA2nJ8XYcvaO9jrJcuLx4vVSS+X79F0ay3YUHGuZf7OhbEotLbyc6d/xfL
# bch0qLAwojGwNwMp0eb4hxLFtB2oaVg+GdE3rE+4zy8IDeGIHajOn3GNkyEj2obg
# VSBJv8aU55Xjizj+ww2NfWN8Hclp9eouzJSsYufdK6+k7vo/OCLveYSLMN6aSsO7
# ThEhaUNmM5GpRRAqtPLYP63OXkGUgRBcoUemnlM2H5qyZyJsyFakTRUTBzXNjWhh
# YckivsU9DT0kmr/JTvM94s8zsXJPLnfy52L+v5f2p5vBII6xDvT73cR/N1hO3L0F
# l5+rWgfF1wmoITfMD3a23YL//6HclQIDAQABo4IBqTCCAaUwHQYDVR0OBBYEFAPG
# 2skcWj0ilaYlGoyLM4kbeGhkMB8GA1UdIwQYMBaAFOdamPMB8kMaIylmJwHFujf/
# 2UX/MFMGA1UdHwRMMEowSKBGoESGQmh0dHA6Ly9wa2kyLnJhYm9uZXQuY29tL0NS
# TC9SSSUyMEludHJhbmV0JTIwSXNzdWluZyUyMENBMiUyMDAxLmNybDCBjQYIKwYB
# BQUHAQEEgYAwfjBRBggrBgEFBQcwAoZFaHR0cDovL3BraTIucmFib25ldC5jb20v
# QUlBL1JJJTIwSW50cmFuZXQlMjBJc3N1aW5nJTIwQ0EyJTIwMDEoMSkuY3J0MCkG
# CCsGAQUFBzABhh1odHRwOi8vb2NzcDIucmFib25ldC5jb20vb2NzcDAOBgNVHQ8B
# Af8EBAMCB4AwPAYJKwYBBAGCNxUHBC8wLQYlKwYBBAGCNxUIhqmZGIT16xqG+ZUj
# sctWhMXNCn+Ep9wGhrPsaAIBZAIBAzATBgNVHSUEDDAKBggrBgEFBQcDAzAbBgkr
# BgEEAYI3FQoEDjAMMAoGCCsGAQUFBwMDMA0GCSqGSIb3DQEBCwUAA4IBAQCugm6X
# 6mggbO+dBEsnZiWmzHe+3O6xD6kvsxeCxY8OJRIzcrcQHpCTTZtAE/lQ5Ba0o+tt
# 9tvAMiSaPNpFq+4L72b3ZcP+yxaQbcRwdNqxdGEYmwy4yzprUVjx4oVD+YXDB7Dx
# kE2MnxmNCe7ojrZoD4zCby0MnwtRXbtEzv6iG7ZB1DSdsc9OkJbZh5cniBJ7PLSN
# G6BrelRZv0OeUgvehmW/hpMVha84OBhR/crN51Bg9cXF6rQEFn/rDzR398H45Fp3
# vdaw7l6DrcCJWssZ6FMT9b6vVb/Wt3Hm0bKB4IKc08/I5AfddCm5WKbmSJOOJnUo
# RqCNJtlLyskvshsOMIIFXDCCA0SgAwIBAgITGgAAAAUjgNUwgCMNxgAAAAAABTAN
# BgkqhkiG9w0BAQsFADBBMR8wHQYDVQQKExZSYWJvYmFuayBJbnRlcm5hdGlvbmFs
# MR4wHAYDVQQDExVSSSBDb3Jwb3JhdGUgUm9vdCBDQTIwHhcNMTcwMzAyMDg1NDM0
# WhcNMjIwMzAyMDkwNDM0WjBGMR8wHQYDVQQKExZSYWJvYmFuayBJbnRlcm5hdGlv
# bmFsMSMwIQYDVQQDExpSSSBJbnRyYW5ldCBJc3N1aW5nIENBMiAwMTCCASIwDQYJ
# KoZIhvcNAQEBBQADggEPADCCAQoCggEBALT5b5/XXyXFSFM1JXxzMaBW4gGFkLyx
# y55RCXVUu00LrhfUcxk3p4fNYsNlYzm9swkbp2HThgFFp5RaB2UsI2VyeqQDlXpf
# w3Sqco1191ijnk7+J1UqWCoKdVzOymaaUIPLCWLdXzymqsubPB0HdyI1Zjsn9Tjl
# YV4wEX160fHZK8BCkTLXAG9ugDtc8ol01mPsQzxE0p+p90EsT6bFIKBOKgHgEzua
# AQU8X1kVzfRg1Lr3Gb79mnX+yltgz5Yh9bAfJEMWnP0kdJcx4IBPYdnNmvkP1pan
# 42dzsO+R6C0kIbh9moZ7Ae4MvLpEBuMwDiHHANjQBH32LdXm5XqK0n0CAwEAAaOC
# AUYwggFCMBAGCSsGAQQBgjcVAQQDAgEBMCMGCSsGAQQBgjcVAgQWBBQiNPkmKQcc
# Hr3YQYj7NP2IwJDzxDAdBgNVHQ4EFgQU51qY8wHyQxojKWYnAcW6N//ZRf8wGQYJ
# KwYBBAGCNxQCBAweCgBTAHUAYgBDAEEwCwYDVR0PBAQDAgGGMBIGA1UdEwEB/wQI
# MAYBAf8CAQAwHwYDVR0jBBgwFoAUmP9e7gl3oEI+6PNNJ/7f7UdGTvIwPgYDVR0f
# BDcwNTAzoDGgL4YtaHR0cDovL3BraTIucmFib25ldC5jb20vY3JsL1JJQ29ycFJv
# b3RDQTIuY3JsME0GCCsGAQUFBwEBBEEwPzA9BggrBgEFBQcwAoYxaHR0cDovL3Br
# aTIucmFib25ldC5jb20vQUlBL1JJQ29ycFJvb3RDQTJDZXJ0LmNydDANBgkqhkiG
# 9w0BAQsFAAOCAgEAhUymSSqxDQknB3A0uutzonpL0GYzz6/ncIdZboFfZ0lk73bj
# yMdPeKOHUevjhkMVMnWkUHGREcNJGPRrop9LTijl4kExNHdPl2iaBx0ELIzfYCHd
# SuHXv4GiaCBrvAoefzYNfdsbK8bVkak/BtVorFyqYg4zhRf5e1D07bxsbpwF9/kD
# ZnPuqKxxgsEteLAyCYKd5kK4zU1sldJ/ff37uVyUlF6RzHGeS9tpDDp/oS/wYxvD
# 3uI8t0/FgaldgTNqLBYtrPVG/ZxbCn7GzcTCBxc4pedqwklwulStBc8QcA47qe8S
# uR8s+z0jS0whVo8AUB203jqhdDdACZWzh6oYF6pJAnSXv7A5S9CzycbOsC5Qoglh
# X/0G58igT4axQNder4Qb6u1zDlfz7QqwgYpkiMiQ4gzWIqntLtRkFIJJlfxmPT6B
# cncLVWUfL4SCR9abR2aSgDAKEIpChkxFvJ6su6WhodTXEo+3utcn38zb2JOXUYaA
# nGkDKWOSPO38f3tlY95fI//zhF5sWTvFSJv+EWM8AtAbRAGn1tM+3rMlcXWBUS2l
# djD7+L8oyQGeImIdMbYrpAvF713rzYa9lKGx+9ElzK6VhRIZ+78iL+E9Ef/+RU5q
# 5dUhx6v6+/FvGG7dXcTcl+4s8u4Tqffc0QlJ0PwzDTHt1YTMk8rLZvPnwdsxggH+
# MIIB+gIBATBdMEYxHzAdBgNVBAoTFlJhYm9iYW5rIEludGVybmF0aW9uYWwxIzAh
# BgNVBAMTGlJJIEludHJhbmV0IElzc3VpbmcgQ0EyIDAxAhNXAAPwryrRT8sgHeZw
# AAEAA/CvMAkGBSsOAwIaBQCgeDAYBgorBgEEAYI3AgEMMQowCKACgAChAoAAMBkG
# CSqGSIb3DQEJAzEMBgorBgEEAYI3AgEEMBwGCisGAQQBgjcCAQsxDjAMBgorBgEE
# AYI3AgEVMCMGCSqGSIb3DQEJBDEWBBSw4V1/6bpV/dgC6KCXWKzGTrQ7fzANBgkq
# hkiG9w0BAQEFAASCAQDRZPFRzCBSNn7HCNZxKj6XSJli30X/UUInoohQTqDJ/4n9
# psW/IbT1f6vh3+ACBIy8o4jXDpHNfxDZbVXkP5Apisr8RdUfoPwp1QtdJzupSBGA
# 1W4tnt80WDJ/yp00/XE99vFXP48hUrbiQUOdf69xmaj1FIi+BszTLlU0nNl9lINz
# NaqBJ7oAFqnirTw2zPWw5OFMDZfIlHMdZsRiqk1EH/7vXtc6ihvEDgAuVO7Ch3m5
# WB897od+kNPev/NsjDaWHkx0MXDy3i0LX4SQDxWYqDa9cdmM91ps4j7QpjONOOfz
# XchQjpMfclzK+x+vYbNYYJmhvXD8XDW620EATI5L
# SIG # End signature block
